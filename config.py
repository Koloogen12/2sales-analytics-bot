"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–±–æ—Ä–∞ –º–µ—Ç—Ä–∏–∫ –ø—Ä–æ–¥–∞–∂
"""
import json
import os
from dataclasses import dataclass
from typing import List, Optional


@dataclass
class Config:
    # Telegram
    telegram_token: str = "7893115588:AAHhmTSQrtZHZWWFdYsYnazRnDpwXMNA0M0"
    admin_chat_id: int = 889614996
    
    # OpenAI
    openai_token: str =  "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"
    openai_model: str = "gpt-4"
    
    # Google Sheets
    google_credentials_file: str = "credentials.json"
    google_sheet_id: str = "1lwcmOgViDgKTY_lyMpkO3wqfMigLPo1PKZj_gyXPF64"
    google_sheet_name: str = "–õ–∏—Å—Ç"
    
    # –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    daily_export_time: str = "23:55"  # HH:MM
    
    # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    database_url: str = "sqlite://db.sqlite3"
    
    # –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
    debug: bool = False

    @classmethod
    def load_from_file(cls, config_path: str = "config.json") -> "Config":
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ JSON —Ñ–∞–π–ª–∞"""
        if not os.path.exists(config_path):
            raise FileNotFoundError(f"‚ùå –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ '{config_path}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
        with open(config_path, "r", encoding="utf-8") as f:
            data = json.load(f)
        
        return cls(
            telegram_token=data["telegram_token"],
            admin_chat_id=data["admin_chat_id"],
            openai_token=data["openai_token"],
            openai_model=data.get("openai_model", "gpt-4"),
            google_credentials_file=data["google_credentials_file"],
            google_sheet_id=data["google_sheet_id"],
            google_sheet_name=data.get("google_sheet_name", "–ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–¥–∞–∂"),
            daily_export_time=data.get("daily_export_time", "23:55"),
            database_url=data.get("database_url", "sqlite://db.sqlite3"),
            debug=data.get("debug", False)
        )
    
    def validate(self) -> None:
        """–í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        required_fields = [
            "telegram_token", "admin_chat_id", "openai_token",
            "google_credentials_file", "google_sheet_id"
        ]
        
        for field in required_fields:
            if not getattr(self, field):
                raise ValueError(f"‚ùå –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ '{field}' –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ")
        
        if not os.path.exists(self.google_credentials_file):
            raise FileNotFoundError(f"‚ùå –§–∞–π–ª Google credentials '{self.google_credentials_file}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
        try:
            hour, minute = map(int, self.daily_export_time.split(":"))
            if not (0 <= hour <= 23 and 0 <= minute <= 59):
                raise ValueError
        except ValueError:
            raise ValueError(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏: {self.daily_export_time}. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ HH:MM")


# –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
config = Config.load_from_file()
config.validate()

print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞")
print(f"ü§ñ Telegram Token: {config.telegram_token[:10]}...")
print(f"üìä Google Sheet ID: {config.google_sheet_id}")
print(f"üß† OpenAI Model: {config.openai_model}")
print(f"üïí –í—Ä–µ–º—è —ç–∫—Å–ø–æ—Ä—Ç–∞: {config.daily_export_time}")
print(f"üîß –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏: {config.debug}")
